{{- define "header" -}}
// Code generated by muxi curd. DO NOT EDIT.

package {{.PackageName}}

import (
    "context"
    "errors"
    "fmt"
    "github.com/muxi-Infra/muxi-micro/pkg/logger"
    "github.com/muxi-Infra/muxi-micro/pkg/sql"
    "gorm.io/gorm"
    "encoding/json"
)

const (
    {{- range $field := .Fields}}
    cache{{$.ModelName}}{{$field.Name}}Prefix = "cache:{{$.ModelName}}:{{$field.Name}}:"
    {{- end}}
)

type {{.ModelName}}Model interface {
    Create(ctx context.Context, data *{{.ModelName}}) error
    FindOne(ctx context.Context, id int64) (*{{.ModelName}}, error)
    {{- range $notPr := .NotPrs}}
    FindBy{{$notPr.Name}}(ctx context.Context, {{$notPr.Name}} {{$notPr.Type}}) (*[]{{$.ModelName}}, error)
    {{- end}}
    Update(ctx context.Context, data *{{.ModelName}}) error
    Delete(ctx context.Context, id int64) error
}

type {{.ModelName}}Exec struct {
    Exec      *sql.Execute
    cacheExec *sql.CacheExecute
    logger    logger.Logger
}

func New{{.ModelName}}Model(db *gorm.DB, cache *sql.CacheExecute, logger logger.Logger) *{{.ModelName}}Exec {
    exec := sql.NewExecute(db)
    return &{{.ModelName}}Exec{
        Exec:      exec,
        cacheExec: cache,
        logger:    logger,
    }
}

{{template "db" $}}

{{template "cache" $}}
{{- end -}}