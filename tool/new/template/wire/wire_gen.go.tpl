// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"helloworld/internal/infrastructure"
	"helloworld/internal/repository"
	"helloworld/internal/server"
	"helloworld/internal/service"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func WireApp() (*grpc.Server, func(), error) {
	string2, err := infrastructure.ProvideDB()
	if err != nil {
		return nil, nil, err
	}
	infrastructureGrpc, err := infrastructure.ProvideGrpcInstance()
	if err != nil {
		return nil, nil, err
	}
	cacheStruct, err := infrastructure.ProvideCache(infrastructureGrpc)
	if err != nil {
		return nil, nil, err
	}
	userModels, err := repository.NewUserModels(string2, cacheStruct)
	if err != nil {
		return nil, nil, err
	}
	helloService := service.NewHelloService(userModels)
	grpcServer := server.NewGRPCServer(helloService, infrastructureGrpc)
	return grpcServer, func() {
	}, nil
}
